{"version":3,"sources":["webpack:///./src/templates/EpisodePaginatedTemplate.js","webpack:///./src/components/EpisodeListItem.js"],"names":["pageContext","group","index","first","last","pageCount","pathPrefix","navProps","previousUrl","nextUrl","title","map","node","key","fields","episodeNumber","Navigation","css","NavButton","visibility","NavLink","test","url","text","props","to","linked","slug","date","Container","Dates","DateTime","fromISO","setLocale","toLocaleString","DATE_FULL","formatDate","start","titleCss","Subtitle"],"mappings":"sMAQe,sBAAsB,IAAnBA,EAAkB,EAAlBA,YACRC,EAAqDD,EAArDC,MAAOC,EAA8CF,EAA9CE,MAAOC,EAAuCH,EAAvCG,MAAOC,EAAgCJ,EAAhCI,KAAMC,EAA0BL,EAA1BK,UAAWC,EAAeN,EAAfM,WAIxCC,EAAW,CAAEJ,QAAOK,YAHNN,EAAQ,GAAK,EAAI,IAAjB,GAA0BI,GAAaJ,EAAQ,GAA/C,IAGmBA,QAAOG,YAAWD,OAAMK,QAFlD,GAAMH,GAAaJ,EAAQ,GAA3B,KAIb,OACE,YAAC,IAAD,KACE,YAAC,IAAD,CAAQQ,MAAOP,EAAQ,OAAH,UAAsBD,IAC1C,mCACCD,EAAMU,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OACT,YAAC,IAAD,aAAiBC,IAAKD,EAAKE,OAAOC,eAAmBH,OAEvD,YAACI,EAAeT,K,uLAKhBS,EAAa,SAAC,GAAD,IACjBb,EADiB,EACjBA,MACAK,EAFiB,EAEjBA,YACAN,EAHiB,EAGjBA,MACAG,EAJiB,EAIjBA,UACAD,EALiB,EAKjBA,KACAK,EANiB,EAMjBA,QANiB,OAQjB,mBACEQ,IAAG,GAUH,YAACC,EAAD,CAAWD,IAAKA,YAAI,CAAEE,WAAYhB,EAAQ,SAAW,cACnD,YAACiB,EAAD,CAASC,KAAMlB,EAAOmB,IAAKd,EAAae,KAAK,qBAE/C,mBAAKN,IAAG,GAAR,UACUf,EADV,OACqBG,GAErB,YAACa,EAAD,CAAWD,IAAKA,YAAI,CAAEE,WAAYf,EAAO,SAAW,cAClD,YAACgB,EAAD,CAASC,KAAMjB,EAAMkB,IAAKb,EAASc,KAAK,sBAKxCH,EAAU,SAAAI,GACd,OAAKA,EAAMH,KAGF,wBAAOG,EAAMD,MAFb,YAAC,OAAD,CAAME,GAAID,EAAMF,KAAME,EAAMD,OAMjCL,EAAY,YAAO,MAAP,sBAAH,6N,kGC5DA,gBAKR,IAAD,IAJJQ,cAII,aAHJZ,OAAUa,EAGN,EAHMA,KAAMZ,EAGZ,EAHYA,cAChBL,EAEI,EAFJA,MACAkB,EACI,EADJA,KAEA,OACE,YAACC,EAAD,KACE,YAACC,EAAD,KAgCN,SAAoBF,GAClB,OAAOG,WAASC,QAAQJ,GAAMK,UAAU,SAASC,eAAeH,WAASI,WAhClEC,CAAWR,EAAKS,QAElBX,EACC,kBAAIT,IAAKqB,GACP,YAAC,OAAD,CAAMb,GAAIE,GAAOjB,IAGnB,kBAAIO,IAAKqB,GAAW5B,GAGtB,YAAC6B,EAAD,kBAAqBxB,KAK3B,IAAMc,EAAY,YAAO,MAAP,qBAAH,0CAITC,EAAQ,YAAO,MAAP,qBAAH,8CAILQ,EAAQ,oCAIRC,EAAW,YAAO,OAAP,qBAAH","file":"component---src-templates-episode-paginated-template-js-0a4226a65c53461a5c2c.js","sourcesContent":["import React from 'react';\nimport Helmet from 'react-helmet';\nimport { Link } from 'gatsby';\nimport styled from '@emotion/styled';\nimport Layout from '../components/Layout';\nimport EpisodeListItem from '../components/EpisodeListItem';\nimport { css } from '@emotion/core';\n\nexport default ({ pageContext }) => {\n  const { group, index, first, last, pageCount, pathPrefix } = pageContext;\n  const previousUrl = index - 1 == 1 ? '/' : `${pathPrefix}${index - 1}/`;\n  const nextUrl = `${pathPrefix}${index + 1}/`;\n\n  const navProps = { first, previousUrl, index, pageCount, last, nextUrl };\n\n  return (\n    <Layout>\n      <Helmet title={first ? 'Home' : `Página ${index}`} />\n      <h1>Episódios</h1>\n      {group.map(({ node }) => (\n        <EpisodeListItem key={node.fields.episodeNumber} {...node} />\n      ))}\n      <Navigation {...navProps} />\n    </Layout>\n  );\n};\n\nconst Navigation = ({\n  first,\n  previousUrl,\n  index,\n  pageCount,\n  last,\n  nextUrl,\n}) => (\n  <div\n    css={css`\n      margin: 40px 0;\n      display: flex;\n      justify-content: space-between;\n      align-content: center;\n      font-size: 80%;\n      &, a {\n        color: black;\n    `}\n  >\n    <NavButton css={css({ visibility: first ? 'hidden' : 'visible ' })}>\n      <NavLink test={first} url={previousUrl} text=\"Página anterior\" />\n    </NavButton>\n    <div css={css({ marginTop: '5px' })}>\n      Página {index} de {pageCount}\n    </div>\n    <NavButton css={css({ visibility: last ? 'hidden' : 'visible ' })}>\n      <NavLink test={last} url={nextUrl} text=\"Próxima página\" />\n    </NavButton>\n  </div>\n);\n\nconst NavLink = props => {\n  if (!props.test) {\n    return <Link to={props.url}>{props.text}</Link>;\n  } else {\n    return <span>{props.text}</span>;\n  }\n};\n\nconst NavButton = styled('div')`\n  border-width: 1px;\n  border-style: solid;\n  border-color: black;\n  padding: 5px 10px;\n  border-radius: 4px;\n  transition: border-color 0.2s ease-in-out;\n  &:hover {\n    border-color: black;\n    a {\n      color: black;\n    }\n  }\n  a {\n    box-shadow: none;\n  }\n`;\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport { DateTime } from 'luxon';\nimport { css } from '@emotion/core';\nimport styled from '@emotion/styled';\n\nexport default ({\n  linked = true,\n  fields: { slug, episodeNumber },\n  title,\n  date,\n}) => {\n  return (\n    <Container>\n      <Dates>\n        {formatDate(date.start)}\n      </Dates>\n      {linked ? (\n        <h3 css={titleCss}>\n          <Link to={slug}>{title}</Link>\n        </h3>\n      ) : (\n        <h1 css={titleCss}>{title}</h1>\n      )}\n\n      <Subtitle>Episódio: {episodeNumber}</Subtitle>\n    </Container>\n  );\n};\n\nconst Container = styled('div')`\n  margin: 40px 0;\n`;\n\nconst Dates = styled('div')`\n  font-size: 0.88rem;\n`;\n\nconst titleCss = css`\n  margin: 0;\n`;\n\nconst Subtitle = styled('span')`\n  font-size: 0.8rem;\n`;\n\nfunction formatDate(date) {\n  return DateTime.fromISO(date).setLocale('pt-BR').toLocaleString(DateTime.DATE_FULL);\n}\n"],"sourceRoot":""}