{"version":3,"sources":["webpack:///./src/components/Host/Host.js","webpack:///./src/components/Disqus.js","webpack:///./src/templates/EpisodeTemplate.js","webpack:///./src/components/Host/tarikingsbr.jpg","webpack:///./src/components/Host/andrexbts.jpg","webpack:///./src/components/EpisodeListItem.js","webpack:///./src/components/Host/ertonnnn.jpg","webpack:///./src/components/Host/law_reano.jpg","webpack:///./src/components/Host/tiobertogueimer.jpg"],"names":["hosts","ertonnnn","tarikingsbr","andrexbts","law_reano","tiobertogueimer","Host","render","name","this","props","href","target","rel","css","src","Component","hasLoaded","Disqus","componentDidMount","window","document","shortname","urlDomain","url","identifier","title","onLoad","disqus_config","script","createElement","async","onload","body","appendChild","maybeLoadDisqusScript","DISQUS","reset","reload","config","location","page","protocol","id","defaultProps","EpisodeTemplate","episodesJson","data","description","embedded","fields","episodeNumber","slug","content","Layout","Helmet","SEO","postSlug","isBlogPost","EpisodeListItem","linked","height","width","frameBorder","scrolling","map","key","length","Links","links","link","pageQuery","module","exports","date","Container","Dates","DateTime","fromISO","setLocale","toLocaleString","DATE_FULL","formatDate","start","titleCss","to","Subtitle"],"mappings":"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","file":"component---src-templates-episode-template-js-dd70522652ab1fd612db.js","sourcesContent":["import React, { Component } from 'react';\nimport ertonnnn from './ertonnnn.jpg';\nimport tarikingsbr from './tarikingsbr.jpg';\nimport andrexbts from './andrexbts.jpg';\nimport law_reano from './law_reano.jpg';\nimport tiobertogueimer from './tiobertogueimer.jpg';\nimport css from '@emotion/css';\n\nconst hosts = {\n  ertonnnn,\n  tarikingsbr,\n  andrexbts,\n  law_reano,\n  tiobertogueimer,\n};\n\nexport default class Host extends Component {\n  render() {\n    const { name } = this.props;\n    return (\n      <a\n        href={`https://twitter.com/${name}`}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        css={css`\n          display: flex;\n          flex-direction: column;\n          align-items: center;\n          box-shadow: none;\n          &:hover {\n            text-decoration: underline;\n          }\n          & + & {\n            margin-left: 30px;\n          }\n        `}\n      >\n        <img\n          src={hosts[name]}\n          css={css`\n            border-radius: 50%;\n            width: 100px;\n            margin: 0;\n            margin-bottom: 10px;\n          `}\n        />\n        <p css={css({ margin: 0 })}>@{name}</p>\n      </a>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { css } from '@emotion/core';\n\nlet hasLoaded = false;\nfunction maybeLoadDisqusScript(shortname, onLoad) {\n  if (hasLoaded) {\n    onLoad();\n    return;\n  }\n  window.disqus_config = function() {};\n\n  const script = document.createElement('script');\n  script.src = `//${shortname}.disqus.com/embed.js`;\n  script.async = true;\n  script.onload = onLoad;\n  document.body.appendChild(script);\n  hasLoaded = true;\n}\n\nexport default class Disqus extends Component {\n  static defaultProps = {\n    shortname: 'barradevida',\n    urlDomain: 'barradevida.com.br',\n    url: '',\n    identifier: '',\n    title: '',\n  };\n\n  componentDidMount() {\n    if (typeof window !== 'undefined' && window.document) {\n      const { shortname, urlDomain, url, identifier, title } = this.props;\n\n      maybeLoadDisqusScript(shortname, () => {\n        window.DISQUS.reset({\n          reload: true,\n          config: function() {\n            const { location } = window;\n            this.page.url = `${location.protocol}//${urlDomain}/${url}`;\n            this.page.identifier = identifier;\n            this.page.title = title;\n          },\n        });\n      });\n    }\n  }\n\n  render() {\n    return <div id=\"disqus_thread\" css={css`\n      margin-top: 3.64rem;\n    `} />;\n  }\n}\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport Helmet from 'react-helmet';\nimport Layout from '../components/Layout';\nimport EpisodeListItem from '../components/EpisodeListItem';\nimport Host from '../components/Host';\nimport Disqus from '../components/Disqus';\nimport SEO from '../components/SEO';\nimport { css } from '@emotion/core';\n\nexport default function EpisodeTemplate({ data: { episodesJson } }) {\n  const {\n    title,\n    description,\n    embedded,\n    fields: { episodeNumber, slug },\n    hosts,\n    content,\n  } = episodesJson;\n\n  return (\n    <Layout>\n      <Helmet title={`E${episodeNumber}: ${title}`} />\n      <SEO\n        title={title}\n        description={`Episódio: ${episodeNumber}`}\n        postSlug={slug}\n        isBlogPost\n      />\n      <EpisodeListItem {...episodesJson} linked={false} />\n      <p>\n        {description}\n      </p>\n      <iframe\n        src={embedded}\n        height=\"100%\"\n        width=\"100%\"\n        frameBorder=\"0\"\n        scrolling=\"no\"\n        css={{margin:0}}>\n      </iframe>\n      <h2>Hosts</h2>\n      <div\n        css={css`\n          display: flex;\n          flex-direction: row;  \n        `}\n      >\n        {hosts.map(name => (\n          <Host key={name} name={name} />\n        ))}\n      </div>\n      {content?.length !== 0 && (\n        <>\n          <h2>Links do Episódio</h2>\n          <Links content={content} />\n        </>\n      )}\n      <Disqus identifier={slug} url={`episode/${episodeNumber}`} />\n    </Layout>\n  );\n}\n\nconst Links = ({ content }) => (\n  <ul>\n    {content.map(({ name, links }) => (\n      <li key={name}>\n        {name}\n        <ul>\n          {links.map(link => (\n            <li key={link}>\n              <a href={link} target=\"_blank\" rel=\"noopener noreferrer\">\n                {link}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </li>\n    ))}\n  </ul>\n);\n\nexport const pageQuery = graphql`\n  query EpisodeByNumber($episodeNumber: String!) {\n    episodesJson(fields: { episodeNumber: { eq: $episodeNumber } }) {\n      title\n      description\n      embedded\n      fields {\n        episodeNumber\n        slug\n      }\n      date {\n        start\n      }\n      hosts\n      content {\n        name\n        links\n      }\n    }\n  }\n`;\n","module.exports = __webpack_public_path__ + \"static/tarikingsbr-8a43f2e9c79bb9db0ecf9cb58db24c8e.jpg\";","module.exports = __webpack_public_path__ + \"static/andrexbts-1d186346b78e8c5b5d107705d4656282.jpg\";","import React from 'react';\nimport { Link } from 'gatsby';\nimport { DateTime } from 'luxon';\nimport { css } from '@emotion/core';\nimport styled from '@emotion/styled';\n\nexport default ({\n  linked = true,\n  fields: { slug, episodeNumber },\n  title,\n  date,\n}) => {\n  return (\n    <Container>\n      <Dates>\n        {formatDate(date.start)}\n      </Dates>\n      {linked ? (\n        <h3 css={titleCss}>\n          <Link to={slug}>{title}</Link>\n        </h3>\n      ) : (\n        <h1 css={titleCss}>{title}</h1>\n      )}\n\n      <Subtitle>Episódio: {episodeNumber}</Subtitle>\n    </Container>\n  );\n};\n\nconst Container = styled('div')`\n  margin: 40px 0;\n`;\n\nconst Dates = styled('div')`\n  font-size: 0.88rem;\n`;\n\nconst titleCss = css`\n  margin: 0;\n`;\n\nconst Subtitle = styled('span')`\n  font-size: 0.8rem;\n`;\n\nfunction formatDate(date) {\n  return DateTime.fromISO(date).setLocale('pt-BR').toLocaleString(DateTime.DATE_FULL);\n}\n","module.exports = __webpack_public_path__ + \"static/ertonnnn-2a963b1260db479b3609b93d884a5879.jpg\";","module.exports = __webpack_public_path__ + \"static/law_reano-3076313513c0f2b7093d46b27084f7f1.jpg\";","module.exports = __webpack_public_path__ + \"static/tiobertogueimer-0e0cc13419250eadadd54e3bcb3a32b9.jpg\";"],"sourceRoot":""}